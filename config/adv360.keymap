#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

// The default layer is 0
#define KEYPAD 1
#define FUNCTION 2
#define MOD      3
#define WM 4
#define NAV 5
#define MEDIA 6





/ {
    behaviors {
      #include "macros.dtsi"

     lssh: left_smart_shift {
          compatible = "zmk,behavior-mod-morph";
          label = "LEFT_SMART_SHIFT";
          #binding-cells = <0>;
          bindings = <&sk LSHIFT>, <&caps_word>;
          mods = <(MOD_LSFT)>;
        };
     rssh: rigt_smart_shift {
           compatible = "zmk,behavior-mod-morph";
           label = "RIGHT_SMART_SHIFT";
           #binding-cells = <0>;
           bindings = <&sk RSHIFT>, <&caps_word>;
           mods = <(MOD_RSFT)>;
        };

      email: used_emails {
            compatible = "zmk,behavior-mod-morph";
            label = "USED_EMAILS";
            #binding-cells = <0>;
            bindings = <&macro_personal_email>, <&macro_work_email>;
            mods = <(MOD_RSFT)>;
        };

      hm: homerow_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          quick_tap_ms = <175>;
          global-quick-tap;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };

      // mode-tap with sticky layer activated on tap.
      mt_sl: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "mo_tog";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&sl>;
        };

      td0: tap_dance_0 {
           compatible = "zmk,behavior-tap-dance";
           label = "TAP_DANCE_0";
           #binding-cells = <0>;
           tapping-term-ms = <200>;
           bindings = <&kp LGUI>, <&kp LG(LSHFT)>;
      };

      td1: tap_dance_1 {
           compatible = "zmk,behavior-tap-dance";
           label = "TAP_DANCE_1";
           #binding-cells = <0>;
           tapping-term-ms = <200>;
           bindings = <&kp RGUI>, <&kp RG(RSHFT)>;
      };

      ht_tmux_copy: tmux_copy {
          compatible = "zmk,behavior-hold-tap";
          label = "TMUX_COPY";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          quick_tap_ms = <175>;
          global-quick-tap;
          flavor = "tap-preferred";
          bindings = <&macro_tmux_copy>, <&kp>;
      };

    };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &kp EQUAL        &kp N1    &kp N2                &kp N3         &kp N4           &kp N5 &tog KEYPAD                                                                                                           &mo MOD &kp N6 &kp N7                &kp N8    &kp N9   &kp N0   &kp MINUS
        &kp DEL          &kp Q     &kp W                 &kp E          &kp R            &kp T  &email                                                                                                                &none   &kp Y  &ht_tmux_copy 0 U     &kp I     &kp O    &kp P    &kp BSLH
        &caps_word       &kp A     &kp S                 &kp D          &kp F            &kp G  &mo MEDIA       &mt LCTRL ESC       &kp LALT                   &kp RALT                   &mt RCTRL ESC               &none   &kp H  &kp J                 &kp K     &kp L    &kp SEMI &kp SQT
        &lssh            &kp Z     &hm LC(X) X           &hm LC(C) C    &hm LC(V) V      &kp B         &none    &none               &mt LSHFT HOME &none &none &mt RSHFT END              &none           &none               &kp N  &kp M                 &kp COMMA &kp DOT  &kp FSLH &rssh
        &mo FUNCTION     &kp GRAVE &kp PRINTSCREEN       &kp LEFT       &kp RIGHT                      &kp BSPC &lt NAV TAB         &mt_sl LGUI WM             &mt_sl RGUI WM             &kp ENTER       &kp SPACE                  &kp DOWN &kp UP       &kp LBKT  &kp RBKT &mo FUNCTION
      >;
    };
    keypad {
      bindings = <
        &kp EQUAL        &kp N1    &kp N2                &kp N3         &kp N4           &kp N5 &trans                                                                                                           &mo MOD &kp N6 &kp KP_NUM   &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &kp MINUS
        &kp DEL          &kp Q     &kp W                 &kp E          &kp R            &kp T  &email                                                                                                           &none   &kp Y  &kp KP_N7    &kp KP_N8    &kp KP_N9     &kp KP_MINUS    &kp BSLH
        &caps_word       &kp A     &kp S                 &kp D          &kp F            &kp G  &none           &mt LCTRL ESC   &kp LALT                   &kp RALT                  &mt RCTRL ESC               &none   &kp H  &kp KP_N4    &kp KP_N5    &kp KP_N6     &kp KP_PLUS     &kp SQT
        &lssh            &kp Z     &hm LC(X) X           &hm LC(C) C    &hm LC(V) V      &kp B         &none    &none           &mt LSHFT HOME &none &none &mt RSHFT END             &none           &none               &kp N  &kp KP_N1    &kp KP_N2    &kp KP_N3     &kp KP_ENTER    &rssh
        &mo FUNCTION     &kp GRAVE &kp PRINTSCREEN       &kp LEFT       &kp RIGHT                      &kp BSPC &kp TAB         &mt_sl LGUI WM             &mt_sl RGUI WM            &kp  ENTER      &kp KP_N0                  &kp DOWN     &kp UP       &kp KP_DOT    &kp RBKT        &mo FUNCTION
      >;
    };
    fn {
      bindings = <
        &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6  &tog KEYPAD                                                 &mo MOD &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
        &trans &trans &trans &trans &trans &trans  &none                                                       &none   &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans &trans &trans  &none        &trans &trans             &trans &trans        &none   &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans &trans &trans        &none  &none  &trans &none &none &trans &none  &none          &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans &trans               &trans &trans &trans             &trans &trans &trans                &trans &trans &trans  &trans  &trans
      >;
    };
    mod {
      bindings = <
        &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                                                                                          &trans                 &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none
        &none &none        &none        &none        &none        &none        &bootloader                                                                                                    &bootloader            &none        &none        &none        &none        &none        &none
        &none &none        &none        &none        &none        &none        &rgb_ug RGB_MEFS_CMD 5                 &bt BT_CLR &bt BT_CLR             &bt BT_CLR &bt BT_CLR                 &rgb_ug RGB_MEFS_CMD 5 &none        &none        &none        &none        &none        &none
        &none &none        &none        &none        &none        &none                               &none           &none      &none      &none &none &none      &none      &none                                  &none        &none        &none        &none        &none        &none
        &none &none        &none        &bl BL_INC   &bl BL_DEC                                       &rgb_ug RGB_TOG &bl BL_TOG &none                  &none      &bl BL_TOG &rgb_ug RGB_TOG                                     &bl BL_INC   &bl BL_DEC   &none        &none        &none
      >;
    };
    wm {
      bindings = <
        &kp F1 &kp F2 &kp F3           &kp F4         &kp F5         &kp F6  &tog KEYPAD                                                               &mo MOD &kp F7 &kp F8     &kp F9     &kp F10     &kp F11 &kp F12
        &trans &trans &kp LG(LS(N1))   &kp LG(LS(N2)) &kp LG(LS(N3)) &trans  &none                                                                     &none   &trans &kp RG(N1) &kp RG(N2) &kp RG(N3)  &trans  &trans
        &trans &trans &kp LG(LS(N4))   &kp LG(LS(N5)) &kp LG(LS(N6)) &trans  &none        &trans &trans                    &trans        &trans        &none   &trans &kp RG(N4) &kp RG(N5) &kp RG(N6)  &trans  &trans
        &trans &trans &kp LG(LS(N7))   &kp LG(LS(N8)) &kp LG(LS(N9)) &trans        &none  &none  &trans        &none &none &trans        &none  &none          &trans &kp RG(N7) &kp RG(N8) &kp RG(N9)  &trans  &trans
        &trans &trans &trans           &trans         &trans                       &trans &trans &kp LG(LSHFT)             &kp RG(RSHFT) &trans &trans                &trans     &trans     &trans      &trans  &trans
      >;
    };
    nav {
      bindings = <
        &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6  &tog KEYPAD                                                 &mo MOD &kp F7   &kp F8   &kp F9 &kp F10    &kp F11 &kp F12
        &trans &trans &trans &trans &trans &trans  &none                                                       &none   &trans   &trans   &trans &trans     &trans  &trans
        &trans &trans &trans &trans &trans &trans  &none        &trans &trans             &trans &trans        &none   &kp LEFT &kp DOWN &kp UP &kp RIGHT  &trans  &trans
        &trans &trans &trans &trans &trans &trans        &none  &none  &trans &none &none &trans &none  &none          &trans   &trans   &trans &trans     &trans  &trans
        &trans &trans &trans &trans &trans               &trans &trans &trans             &trans &trans &trans                  &trans   &trans &trans     &trans  &trans
      >;
    };
    media {
      bindings = <
        &kp F1 &kp F2 &kp F3 &kp F4          &kp F5            &kp F6      &tog KEYPAD                                                 &mo MOD &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
        &trans &trans &trans &trans          &trans            &trans      &none                                                       &none   &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &kp C_VOLUME_UP &kp C_VOLUME_DOWN &kp C_MUTE  &none        &trans &trans             &trans &trans        &none   &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans          &trans            &trans           &none   &none  &trans &none &none &trans &none  &none          &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans          &trans                             &trans  &trans &trans             &trans &trans &trans                &trans &trans &trans  &trans  &trans
      >;
    };
  };
};
